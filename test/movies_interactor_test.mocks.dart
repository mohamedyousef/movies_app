// Mocks generated by Mockito 5.4.2 from annotations
// in instbug_task/test/movies_interactor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:instbug_task/core/models/result.dart' as _i2;
import 'package:instbug_task/core/network/network_response.dart' as _i6;
import 'package:instbug_task/features/movies/domain/models/models.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

import 'movies_interactor_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T, R> extends _i1.SmartFake implements _i2.Result<T, R> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockMoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockMoviesRepository extends _i1.Mock
    implements _i3.MockMoviesRepository {
  MockMockMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.MovieList, _i6.NetworkErrorType>> getAllMovies(
          {required int? page}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllMovies,
          [],
          {#page: page},
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.MovieList, _i6.NetworkErrorType>>.value(
                _FakeResult_0<_i5.MovieList, _i6.NetworkErrorType>(
          this,
          Invocation.method(
            #getAllMovies,
            [],
            {#page: page},
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.MovieList, _i6.NetworkErrorType>>);
}
